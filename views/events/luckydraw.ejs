<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8">
  <title>互動抽獎</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      height:100vh;
      overflow-y:scroll;
      overflow-x:hidden;
      margin: 0;
      /* background: rgb(0, 46, 93); */
    }
    .bg {
      background-image: url('/luckydraw/img/<%= eventId %>.jpg'); /* 使用事件 ID 作為背景圖片 */
      background-size: cover; /* 使背景圖片覆蓋整個畫面 */
      background-position: center; /* 使背景圖片居中 */
      padding: 120px;
      height:100vh;
    }

    .container {
      display: flex;
      align-items: flex-start;
      gap: 30px;
    }

    #result {
      display: flex;
      flex-wrap: wrap;
      width: 100%;
      gap: 10px;
      margin-top: 30px; /* 增加上邊距以向下移動 result */
    }

    .rets {
      display: flex;
      align-items: center; /* 垂直居中 */
      background-color: #ffeeba;
      border-radius: 6px;
      padding: 12px;
      cursor: pointer;
      box-shadow: 0 0 4px rgba(0,0,0,0.1);
      transition: 0.3s;
      width: calc(25% - 10px); /* 使其佔滿父容器，四個一行 */
    }

    .rets:hover {
      background-color: #ffe08a;
    }

    .number {
      width: 30px; /* 控制序號的寬度 */
      text-align: center;
      font-weight: bold;
      margin-right: 10px; /* 與卡片內容的間距 */
    }

    .card {
      flex-grow: 1; /* 使卡片佔滿剩餘空間 */
    }

    .name {
      font-weight: bold;
      font-size: 16px;
    }

    .company {
      font-size: 13px;
      color: #555;
      margin-top: 3px;
    }

    .table {
      font-size: 12px;
      color: #666;
      margin-top: 2px;
    }

    .prize {
      font-size: 14px;
      font-weight: bold;
      color: #e74c3c;
      background-color: #fff3cd;
      border: 2px solid #ffc107;
      border-radius: 4px;
      padding: 4px 8px;
      margin-bottom: 6px;
      text-align: center;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    #control {
      display: flex;
      flex-direction: column;
      gap: 15px;
      position: fixed;
      right: 0;
      transform: translate(-50%,0%);
    }

    #startBtn, #draw5Btn, #draw10Btn {
      padding: 15px 20px;
      font-size: 16px;
      /* background-color: #28a745; */
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }

    #startBtn:disabled {
      background-color: #aaa;
      cursor: not-allowed;
    }

    #spinner {
      width: 60px;
      height: 60px;
      border: 6px solid #ccc;
      border-top: 6px solid #28a745;
      border-radius: 50%;
      animation: spin 0.4s linear infinite;
      display: none;
      margin: 0 auto;
    }

    #current {
      font-size: 36px;
      font-weight: bold;
      color: black; /* 文字顏色設置為黑色 */
      text-align: center;
      margin-top: 150px;
      background-color: #ffeeba; /* 與 card 一致的背景 */
      border-radius: 6px; /* 與 card 一致的圓角 */
      padding: 50px; /* 與 card 一致的內邊距 */
      width: 20%; /* 調整寬度 */
      margin-left: auto; /* 居中 */
      margin-right: auto; /* 居中 */
      display: none; /* 初始隱藏 */
    }

    h1 {
      color: #000;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .animation {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }

    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      display: none;
      z-index: 999;
    }

    .spinner {
      width: 150px; /* 調整為新的 giftbox.gif 尺寸 */
      height: 150px; /* 調整為新的 giftbox.gif 尺寸 */
      /* 移除 CSS 旋轉動畫，因為 giftbox.gif 本身已有動畫 */
    }

    /* 移除 CSS 旋轉動畫，因為 giftbox.gif 本身已有動畫 */
  </style>
  <!-- <link rel="stylesheet" href="/admin/assets/css/luckydraw.css"> -->
</head>
<body>

  <div class="bg">
    <div class="js-container  container">
      <div id="result"></div>

      <div id="control">
        <div id="prizeSelector" style="margin-bottom: 15px;">
          <label for="prizeSelect" style="color: white; font-weight: bold; display: block; margin-bottom: 5px;">選擇獎品：</label>
          <select id="prizeSelect" style="width: 180px; padding: 8px; border-radius: 4px; margin-bottom: 10px;" required>
            <option value="">請選擇獎品</option>
            <% prizes.forEach(prize => { %>
              <% if (prize.unit > 0) { %>
                <option value="<%= prize._id %>" data-name="<%= prize.name %>"><%= prize.name %> (剩餘: <%= prize.unit %>)</option>
              <% } %>
            <% }); %>
          </select>
        </div>
        <img id="startBtn" src="/admin/img/start.png" alt="start...">
        <button id="draw5Btn" style="padding: 15px 20px; font-size: 16px; background-color: #007bff; color: white; border: none; border-radius: 6px; cursor: pointer; margin-top: 10px;">連抽5人</button>
        <!-- <button id="startBtn">1</button> -->
        <!-- <button id="draw10Btn">10</button> -->
        <div id="spinner"></div>
      </div>
    </div>

    <div id="current"></div>
    <div class="overlay" id="overlay"></div>
    <div class="animation" id="animation">
      <img src="/admin/img/giftbox.gif" alt="Loading..." class="spinner" id="spinnerImage">
    </div>
  </div> 

  <script>
    const allPeople = <%- JSON.stringify(availablePeople) %>; // 將 users 轉換為 JSON 格式
    const eventId = '<%= eventId %>';

    let availablePeople = [...allPeople];
    const drawnPeople = [];
    
    const resultDiv = document.getElementById('result');
    const startBtn = document.getElementById('startBtn');
    const draw5Btn = document.getElementById('draw5Btn');
    const draw10Btn = document.getElementById('draw10Btn');
    const spinner = document.getElementById('spinner');
    const currentDiv = document.getElementById('current');
    const overlay = document.getElementById('overlay');
    const animationDiv = document.getElementById('animation');

    function drawWinner() {
      if (availablePeople.length === 0) {
        alert("所有人都已抽出！");
        return;
      }

      // 檢查是否選擇了獎品
      const prizeSelect = document.getElementById('prizeSelect');
      if (!prizeSelect.value) {
        alert("請先選擇獎品！");
        return;
      }

      // 動態檢查獎品庫存
      const selectedOption = prizeSelect.options[prizeSelect.selectedIndex];
      const currentText = selectedOption.text;
      const match = currentText.match(/\(剩餘: (\d+)\)/);
      
      if (!match) {
        alert("無法獲取獎品庫存信息！");
        return;
      }

      const remainingPrize = parseInt(match[1]);
      if (remainingPrize <= 0) {
        alert("所選獎品已無庫存！");
        return;
      }

      overlay.style.display = 'block';
      animationDiv.style.display = 'block';
      spinner.style.display = 'block';
      startBtn.disabled = true;

      setTimeout(() => {
        spinner.style.display = 'none';
        startBtn.disabled = false;

        const index = Math.floor(Math.random() * availablePeople.length);
        const person = availablePeople.splice(index, 1)[0];
        drawnPeople.push(person);

        // 獲取選擇的獎品信息（提前獲取）
        const prizeSelect = document.getElementById('prizeSelect');
        const selectedPrizeId = prizeSelect.value;
        const selectedPrizeName = prizeSelect.options[prizeSelect.selectedIndex].dataset.name || '';
        
        // 將獎品信息存儲到 person 對象中
        person.prizeId = selectedPrizeId || null;
        person.prizeName = selectedPrizeName;

        const rets = document.createElement('div');
        rets.className = 'rets';
        rets.dataset.id = person._id;

        // 顯示中獎者的序號
        const winnerIndex = drawnPeople.length; // 當前中獎者的序號
        // 構建顯示內容，處理空值
        let displayContent = '';
        
        // 添加獎品信息（在名字上方）
        if (person.prizeName) {
          displayContent += `<div class="prize">🎁 ${person.prizeName}</div>`;
        }
        
        displayContent += `<div class="name">${person.name}</div>`;
        
        if (person.company) {
          displayContent += `<div class="company">${person.company}</div>`;
        }
        
        if (person.table) {
          displayContent += `<div class="table">桌號: ${person.table}</div>`;
        }
        
        rets.innerHTML = `<div class="number">${winnerIndex}</div><div class="card">${displayContent}</div>`;
        resultDiv.appendChild(rets);

        // 顯示當前中獎者
        let currentDisplay = '';
        
        // 添加獎品信息
        if (person.prizeName) {
          currentDisplay += `<div style="font-size: 24px; color: #e74c3c; font-weight: bold; margin-bottom: 10px;">🎁 ${person.prizeName}</div>`;
        }
        
        currentDisplay += person.name;
        if (person.company) {
          currentDisplay += `<br>(${person.company})`;
        }
        if (person.table) {
          currentDisplay += `<br>桌號: ${person.table}`;
        }
        currentDiv.innerHTML = currentDisplay;
        currentDiv.style.display = 'block'; // 顯示 current

        // 點擊卡片 → 刪除確認
        rets.addEventListener('click', () => {
          if (confirm(`確定要取消 ${person.name} 的中獎結果？`)) {
            resultDiv.removeChild(rets);
            drawnPeople.splice(drawnPeople.findIndex(p => p._id === person._id), 1);
            availablePeople.push(person);

            // 如果這個人有指定獎品，需要還原獎品選項的顯示
            if (person.prizeId) {
              const prizeSelect = document.getElementById('prizeSelect');
              let option = Array.from(prizeSelect.options).find(opt => opt.value === person.prizeId);
              
              if (option) {
                // 選項存在，更新數量
                const currentText = option.text;
                const match = currentText.match(/\(剩餘: (\d+)\)/);
                if (match) {
                  const remaining = parseInt(match[1]) + 1; // 還原數量
                  option.text = option.text.replace(/\(剩餘: \d+\)/, `(剩餘: ${remaining})`);
                }
              } else {
                // 選項不存在（被移除了），需要重新創建
                const newOption = document.createElement('option');
                newOption.value = person.prizeId;
                newOption.dataset.name = person.prizeName || '未知獎品';
                newOption.text = `${person.prizeName || '未知獎品'} (剩餘: 1)`;
                
                // 插入到第一個選項之後
                if (prizeSelect.options.length > 1) {
                  prizeSelect.insertBefore(newOption, prizeSelect.options[1]);
                } else {
                  prizeSelect.appendChild(newOption);
                }
                
                console.log(`已重新添加獎品選項: ${person.prizeName} (剩餘: 1)`);
              }
            }

            // DELETE API
            fetch(`/events/${eventId}/luckydraw`, { // 使用 eventId
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ _id: person._id })
            })
            .then(res => {
              if (res.ok) {
                console.log("已刪除", person);
              } else {
                console.error("刪除失敗", res.statusText);
              }
            })
            .catch(err => console.error("刪除失敗", err));
          }
        });

        // 獎品信息已經在上面獲取並存儲到 person 對象中
        // 準備發送的數據
        const postData = {
          ...person,
          prizeId: person.prizeId
        };
        
        // POST 該人資料
        fetch(`/events/${eventId}/luckydraw`, { // 使用 eventId
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(postData)
        })
        .then(res => {
          if (res.ok) {
            console.log("已送出", person);
            // 更新獎品選項顯示
            const option = prizeSelect.options[prizeSelect.selectedIndex];
            const currentText = option.text;
            const match = currentText.match(/\(剩餘: (\d+)\)/);
            if (match) {
              const remaining = parseInt(match[1]) - 1;
              if (remaining <= 0) {
                option.remove(); // 移除數量為0的選項
                // 重置選擇為第一個可用選項
                if (prizeSelect.options.length > 1) {
                  prizeSelect.selectedIndex = 1;
                } else {
                  prizeSelect.selectedIndex = 0;
                }
              } else {
                option.text = option.text.replace(/\(剩餘: \d+\)/, `(剩餘: ${remaining})`);
              }
            }
          } else {
            console.error("送出失敗", res.statusText);
            // 如果送出失敗，重新啟用按鈕
            startBtn.disabled = false;
          }
        })
        .catch(err => console.error("送出失敗", err));

        overlay.style.display = 'none';
        animationDiv.style.display = 'none';
      }, 3000); // 3秒後顯示結果
    }

    startBtn.addEventListener('click', drawWinner);

    draw5Btn.addEventListener('click', () => {
      // 檢查是否選擇了獎品
      const prizeSelect = document.getElementById('prizeSelect');
      if (!prizeSelect.value) {
        alert("請先選擇獎品！");
        return;
      }

      // 獲取當前選擇的獎品信息
      const selectedPrizeId = prizeSelect.value;
      const selectedOption = prizeSelect.options[prizeSelect.selectedIndex];
      const currentText = selectedOption.text;
      const match = currentText.match(/\(剩餘: (\d+)\)/);
      
      if (!match) {
        alert("無法獲取獎品庫存信息！");
        return;
      }

      const remainingPrize = parseInt(match[1]);
      const availablePeopleCount = availablePeople.length;
      
      // 計算實際可抽取的數量：取最小值（5人、可用人數、獎品庫存）
      const drawCount = Math.min(5, availablePeopleCount, remainingPrize);
      
      if (drawCount <= 0) {
        if (availablePeopleCount === 0) {
          alert("所有人都已抽出！");
        } else if (remainingPrize === 0) {
          alert("所選獎品已無庫存！");
        }
        return;
      }

      // 顯示連抽信息
      console.log(`開始連抽 ${drawCount} 人，獎品庫存：${remainingPrize}，可用人數：${availablePeopleCount}`);

      // 執行連抽
      let currentDraw = 0;
      const executeDraw = () => {
        if (currentDraw >= drawCount) {
          return; // 已完成所有抽獎
        }

        // 重新檢查獎品庫存
        const prizeSelect = document.getElementById('prizeSelect');
        const selectedOption = prizeSelect.options[prizeSelect.selectedIndex];
        const currentText = selectedOption.text;
        const match = currentText.match(/\(剩餘: (\d+)\)/);
        
        if (!match || parseInt(match[1]) <= 0) {
          console.log("獎品庫存不足，停止連抽");
          return;
        }

        // 檢查是否還有可用人員
        if (availablePeople.length === 0) {
          console.log("沒有可用人員，停止連抽");
          return;
        }

        drawWinner();
        currentDraw++;
        
        // 如果還有剩餘抽獎次數，繼續下一次
        if (currentDraw < drawCount) {
          setTimeout(executeDraw, 3500); // 3.5秒後執行下一次抽獎
        }
      };

      executeDraw();
    });

    draw10Btn.addEventListener('click', () => {
      const drawCount = Math.min(10, availablePeople.length); // 確保最多抽取可用人數
      for (let i = 0; i < drawCount; i++) {
        drawWinner();
      }
    });
  </script>
  <!-- <script src="/admin/assets/js/luckydraw.js"></script> -->
</body>
</html>
