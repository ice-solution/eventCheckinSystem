<%- include ("components/header") %>
<%- include ("components/menu", {eventId: event._id}) %>
<link rel="stylesheet" href="/admin/assets/css/cs-skin-elastic.css">
<link rel="stylesheet" href="/admin/assets/css/lib/datatable/dataTables.bootstrap.min.css">
<link rel="stylesheet" href="/admin/assets/css/style.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<style>
    .form-section {
        border: 1px solid #dee2e6;
        border-radius: 8px;
        margin-bottom: 20px;
        padding: 20px;
        background-color: #f8f9fa;
    }
    .field-item {
        border: 1px solid #e9ecef;
        border-radius: 6px;
        margin-bottom: 15px;
        padding: 15px;
        background-color: white;
    }
    .field-controls {
        display: flex;
        gap: 10px;
        margin-bottom: 10px;
    }
    .section-controls {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }
    .hidden-field {
        opacity: 0.5;
    }
    .hidden-section {
        opacity: 0.3;
    }
</style>
<div id="right-panel" class="right-panel">
    <%- include ("components/rightpanel_header") %>
    <div class="content">
        <div class="animated fadeIn">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <strong class="card-title">表單配置管理 - <%= event.name %></strong>
                            <div class="btn-toolbar mb-2 mb-md-0" style="float: right;">
                                <div class="btn-group me-2">
                                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="resetToDefault()">
                                        <i class="fas fa-undo"></i> 重置為預設
                                    </button>
                                    <button type="button" class="btn btn-sm btn-primary" onclick="saveConfig()">
                                        <i class="fas fa-save"></i> 儲存配置
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <!-- 事件信息 -->
                            <div class="alert alert-info">
                                <h5><%= event.name %></h5>
                                <p class="mb-0">配置此事件的註冊表單字段顯示設定</p>
                            </div>

                            <!-- 語言設置 -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h6>語言設置 (Language Settings)</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label>默認語言 (Default Language)</label>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-outline-success <%= formConfig.defaultLanguage === 'zh' ? 'active' : '' %>" id="defaultZhBtn" onclick="console.log('Zh button clicked'); updateDefaultLanguage('zh')">中文</button>
                                                <button type="button" class="btn btn-outline-success <%= formConfig.defaultLanguage === 'en' ? 'active' : '' %>" id="defaultEnBtn" onclick="console.log('En button clicked'); updateDefaultLanguage('en')">English</button>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <label>當前語言 (Current Language)</label>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-outline-primary active" id="langZhBtn" onclick="switchLanguage('zh')">中文</button>
                                                <button type="button" class="btn btn-outline-primary" id="langEnBtn" onclick="switchLanguage('en')">English</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- 表單配置區域 -->
                            <div id="formConfigContainer">
                                <% if (formConfig && formConfig.sections) { %>
                                    <% formConfig.sections.forEach((section, sectionIndex) => { %>
                                        <div class="form-section <%= section.visible ? '' : 'hidden-section' %>" data-section-index="<%= sectionIndex %>">
                                            <div class="section-controls">
                                                <div class="form-check form-switch">
                                                    <input class="form-check-input" type="checkbox" 
                                                           <%= section.visible ? 'checked' : '' %>
                                                           onchange="toggleSection(<%= sectionIndex %>)">
                                                    <label class="form-check-label">
                                                        <strong><%= section.sectionTitle %></strong>
                                                    </label>
                                                </div>
                                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeSection(<%= sectionIndex %>)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                            
                                            <% if (section.fields) { %>
                                                <% section.fields.forEach((field, fieldIndex) => { %>
                                                    <div class="field-item <%= field.visible ? '' : 'hidden-field' %>" data-field-index="<%= fieldIndex %>">
                                                        <div class="field-controls">
                                                            <div class="form-check form-switch">
                                                                <input class="form-check-input" type="checkbox" 
                                                                       <%= field.visible ? 'checked' : '' %>
                                                                       onchange="toggleField(<%= sectionIndex %>, <%= fieldIndex %>)">
                                                                <label class="form-check-label">
                                                                    <strong><%= field.label %></strong>
                                                                    <% if (field.required) { %>
                                                                        <span class="text-danger">*</span>
                                                                    <% } %>
                                                                </label>
                                                            </div>
                                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeField(<%= sectionIndex %>, <%= fieldIndex %>)">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </div>
                                                        
                                                        <div class="row">
                                                            <div class="col-md-2">
                                                                <label class="form-label">字段名稱</label>
                                                                <input type="text" class="form-control form-control-sm" 
                                                                       value="<%= field.fieldName %>" 
                                                                       onchange="updateFieldProperty(<%= sectionIndex %>, <%= fieldIndex %>, 'fieldName', this.value)">
                                                            </div>
                                                            <div class="col-md-2">
                                                                <label class="form-label">中文標籤</label>
                                                                <input type="text" class="form-control form-control-sm" 
                                                                       value="<%= field.label && field.label.zh ? field.label.zh : (typeof field.label === 'string' ? field.label : '') %>" 
                                                                       onchange="updateFieldLabel(<%= sectionIndex %>, <%= fieldIndex %>, 'zh', this.value)">
                                                            </div>
                                                            <div class="col-md-2">
                                                                <label class="form-label">English Label</label>
                                                                <input type="text" class="form-control form-control-sm" 
                                                                       value="<%= field.label && field.label.en ? field.label.en : '' %>" 
                                                                       onchange="updateFieldLabel(<%= sectionIndex %>, <%= fieldIndex %>, 'en', this.value)">
                                                            </div>
                                                            <div class="col-md-2">
                                                                <label class="form-label">字段類型</label>
                                                                <select class="form-select form-select-sm" 
                                                                        onchange="updateFieldProperty(<%= sectionIndex %>, <%= fieldIndex %>, 'type', this.value)">
                                                                    <option value="text" <%= field.type === 'text' ? 'selected' : '' %>>文字</option>
                                                                    <option value="email" <%= field.type === 'email' ? 'selected' : '' %>>電子郵件</option>
                                                                    <option value="tel" <%= field.type === 'tel' ? 'selected' : '' %>>電話</option>
                                                                    <option value="select" <%= field.type === 'select' ? 'selected' : '' %>>下拉選單</option>
                                                                    <option value="textarea" <%= field.type === 'textarea' ? 'selected' : '' %>>多行文字</option>
                                                                </select>
                                                            </div>
                                                            <div class="col-md-2">
                                                                <label class="form-label">必填</label>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" 
                                                                           <%= field.required ? 'checked' : '' %>
                                                                           onchange="updateFieldProperty(<%= sectionIndex %>, <%= fieldIndex %>, 'required', this.checked)">
                                                                </div>
                                                            </div>
                                                            <div class="col-md-2">
                                                                <label class="form-label">排序</label>
                                                                <input type="number" class="form-control form-control-sm" 
                                                                       value="<%= field.order %>" 
                                                                       onchange="updateFieldProperty(<%= sectionIndex %>, <%= fieldIndex %>, 'order', parseInt(this.value))">
                                                            </div>
                                                        </div>
                                                        
                                                        <div class="row mt-2">
                                                            <div class="col-md-3">
                                                                <label class="form-label">中文佔位符</label>
                                                                <input type="text" class="form-control form-control-sm" 
                                                                       value="<%= field.placeholder && field.placeholder.zh ? field.placeholder.zh : (typeof field.placeholder === 'string' ? field.placeholder : '') %>" 
                                                                       onchange="updateFieldPlaceholder(<%= sectionIndex %>, <%= fieldIndex %>, 'zh', this.value)">
                                                            </div>
                                                            <div class="col-md-3">
                                                                <label class="form-label">English Placeholder</label>
                                                                <input type="text" class="form-control form-control-sm" 
                                                                       value="<%= field.placeholder && field.placeholder.en ? field.placeholder.en : '' %>" 
                                                                       onchange="updateFieldPlaceholder(<%= sectionIndex %>, <%= fieldIndex %>, 'en', this.value)">
                                                            </div>
                                                        </div>
                                                        
                                                        <% if (field.type === 'select' && field.options) { %>
                                                            <div class="mt-2">
                                                                <label class="form-label">選項設定</label>
                                                                <div id="options-<%= sectionIndex %>-<%= fieldIndex %>">
                                                                    <% field.options.forEach((option, optionIndex) => { %>
                                                                        <div class="row mb-2">
                                                                            <div class="col-md-3">
                                                                                <input type="text" class="form-control form-control-sm" 
                                                                                       placeholder="選項值" value="<%= option.value %>"
                                                                                       onchange="updateOption(<%= sectionIndex %>, <%= fieldIndex %>, <%= optionIndex %>, 'value', this.value)">
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <input type="text" class="form-control form-control-sm" 
                                                                                       placeholder="中文標籤" 
                                                                                       value="<%= option.label && option.label.zh ? option.label.zh : (typeof option.label === 'string' ? option.label : '') %>"
                                                                                       onchange="updateOptionLabel(<%= sectionIndex %>, <%= fieldIndex %>, <%= optionIndex %>, 'zh', this.value)">
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <input type="text" class="form-control form-control-sm" 
                                                                                       placeholder="English Label" 
                                                                                       value="<%= option.label && option.label.en ? option.label.en : '' %>"
                                                                                       onchange="updateOptionLabel(<%= sectionIndex %>, <%= fieldIndex %>, <%= optionIndex %>, 'en', this.value)">
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <button type="button" class="btn btn-outline-danger btn-sm" 
                                                                                        onclick="removeOption(<%= sectionIndex %>, <%= fieldIndex %>, <%= optionIndex %>)">
                                                                                    <i class="fas fa-trash"></i>
                                                                                </button>
                                                                            </div>
                                                                        </div>
                                                                    <% }); %>
                                                                </div>
                                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                                        onclick="addOption(<%= sectionIndex %>, <%= fieldIndex %>)">
                                                                    <i class="fas fa-plus"></i> 添加選項
                                                                </button>
                                                            </div>
                                                        <% } %>
                                                    </div>
                                                <% }); %>
                                            <% } %>
                                            
                                            <button type="button" class="btn btn-sm btn-outline-primary mt-2" 
                                                    onclick="addField(<%= sectionIndex %>)">
                                                <i class="fas fa-plus"></i> 添加字段
                                            </button>
                                        </div>
                                    <% }); %>
                                <% } %>
                            </div>

                            <!-- 添加新區塊按鈕 -->
                            <div class="text-center mt-4">
                                <button type="button" class="btn btn-primary" onclick="addSection()">
                                    <i class="fas fa-plus"></i> 添加新區塊
                                </button>
                            </div>

                            <!-- 預覽區域 -->
                            <div class="mt-4">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h5>表單預覽</h5>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-outline-primary active" id="previewZhBtn" onclick="switchPreviewLanguage('zh')">中文預覽</button>
                                        <button type="button" class="btn btn-outline-primary" id="previewEnBtn" onclick="switchPreviewLanguage('en')">English Preview</button>
                                    </div>
                                </div>
                                <div class="border p-3 bg-light">
                                    <div id="formPreview">
                                        <!-- 預覽內容將在這裡動態生成 -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 載入腳本 -->
<script src="/admin/assets/js/vendor/jquery-2.1.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<style>
    /* 默認語言按鈕組樣式 */
    .btn-outline-success {
        border-color: #28a745;
        color: #28a745;
    }

    .btn-outline-success.active {
        background-color: #28a745;
        border-color: #28a745;
        color: white;
    }

    .btn-outline-success:not(.active):hover {
        background-color: #28a745;
        border-color: #28a745;
        color: white;
    }

    /* 當前語言按鈕組樣式 */
    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
    }

    .btn-outline-primary.active {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

    .btn-outline-primary:not(.active):hover {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

    /* 預覽語言切換按鈕樣式 */
    .btn-group .btn {
        padding: 6px 12px;
        font-size: 12px;
    }
</style>

<script>
    let formConfig = <%- JSON.stringify(formConfig) %>;
    const eventId = '<%= event._id %>';
    let currentLanguage = 'zh'; // 當前編輯語言

    // 切換語言
    function switchLanguage(lang) {
        currentLanguage = lang;
        
        // 更新按鈕狀態
        document.getElementById('langZhBtn').classList.toggle('active', lang === 'zh');
        document.getElementById('langEnBtn').classList.toggle('active', lang === 'en');
        
        // 重新渲染頁面以顯示對應語言的內容
        location.reload();
    }

    // 顯示提示信息
    function showAlert(type, message) {
        // 創建提示元素
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        // 插入到頁面頂部
        const container = document.querySelector('.card-body');
        if (container) {
            container.insertBefore(alertDiv, container.firstChild);
            
            // 3秒後自動消失
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 3000);
        }
    }

    // 更新默認語言
    async function updateDefaultLanguage(lang) {
        console.log('updateDefaultLanguage called with:', lang);
        console.log('Current formConfig.defaultLanguage:', formConfig.defaultLanguage);
        
        formConfig.defaultLanguage = lang;
        console.log('Updated formConfig.defaultLanguage to:', formConfig.defaultLanguage);
        
        // 更新按鈕狀態
        updateDefaultLanguageButtons();
        
        try {
            console.log('Saving config...');
            await saveConfig();
            console.log('Config saved successfully');
            showAlert('success', '默認語言已更新！');
        } catch (error) {
            console.error('Error updating default language:', error);
            showAlert('danger', '更新失敗：' + error.message);
        }
    }

    // 更新默認語言按鈕狀態
    function updateDefaultLanguageButtons() {
        const defaultLang = formConfig.defaultLanguage;
        const zhBtn = document.getElementById('defaultZhBtn');
        const enBtn = document.getElementById('defaultEnBtn');
        
        if (zhBtn && enBtn) {
            zhBtn.classList.toggle('active', defaultLang === 'zh');
            enBtn.classList.toggle('active', defaultLang === 'en');
        }
    }

    // 更新字段標籤（多語言）
    function updateFieldLabel(sectionIndex, fieldIndex, lang, value) {
        if (formConfig.sections[sectionIndex] && formConfig.sections[sectionIndex].fields[fieldIndex]) {
            if (!formConfig.sections[sectionIndex].fields[fieldIndex].label) {
                formConfig.sections[sectionIndex].fields[fieldIndex].label = {};
            }
            formConfig.sections[sectionIndex].fields[fieldIndex].label[lang] = value;
            updatePreview();
        }
    }

    // 更新字段佔位符（多語言）
    function updateFieldPlaceholder(sectionIndex, fieldIndex, lang, value) {
        if (formConfig.sections[sectionIndex] && formConfig.sections[sectionIndex].fields[fieldIndex]) {
            if (!formConfig.sections[sectionIndex].fields[fieldIndex].placeholder) {
                formConfig.sections[sectionIndex].fields[fieldIndex].placeholder = {};
            }
            formConfig.sections[sectionIndex].fields[fieldIndex].placeholder[lang] = value;
            updatePreview();
        }
    }

    // 更新選項標籤（多語言）
    function updateOptionLabel(sectionIndex, fieldIndex, optionIndex, lang, value) {
        if (formConfig.sections[sectionIndex] && 
            formConfig.sections[sectionIndex].fields[fieldIndex] &&
            formConfig.sections[sectionIndex].fields[fieldIndex].options[optionIndex]) {
            if (!formConfig.sections[sectionIndex].fields[fieldIndex].options[optionIndex].label) {
                formConfig.sections[sectionIndex].fields[fieldIndex].options[optionIndex].label = {};
            }
            formConfig.sections[sectionIndex].fields[fieldIndex].options[optionIndex].label[lang] = value;
            updatePreview();
        }
    }

    // 更新字段屬性
    async function updateFieldProperty(sectionIndex, fieldIndex, property, value) {
        if (formConfig.sections[sectionIndex] && formConfig.sections[sectionIndex].fields[fieldIndex]) {
            formConfig.sections[sectionIndex].fields[fieldIndex][property] = value;
            
            // 如果更改了字段類型，需要處理選項
            if (property === 'type') {
                if (value === 'select') {
                    // 如果是下拉選單，確保有選項數組
                    if (!formConfig.sections[sectionIndex].fields[fieldIndex].options) {
                        formConfig.sections[sectionIndex].fields[fieldIndex].options = [];
                    }
                } else {
                    // 如果不是下拉選單，清除選項
                    delete formConfig.sections[sectionIndex].fields[fieldIndex].options;
                }
                
                // 字段類型切換時立即保存
                try {
                    await saveConfig();
                    location.reload();
                } catch (error) {
                    console.error('保存失敗:', error);
                    alert('保存失敗，請重試');
                }
            } else {
                updatePreview();
            }
        }
    }

    // 更新選項
    function updateOption(sectionIndex, fieldIndex, optionIndex, property, value) {
        if (formConfig.sections[sectionIndex] && 
            formConfig.sections[sectionIndex].fields[fieldIndex] &&
            formConfig.sections[sectionIndex].fields[fieldIndex].options[optionIndex]) {
            formConfig.sections[sectionIndex].fields[fieldIndex].options[optionIndex][property] = value;
        }
    }

    // 添加選項
    async function addOption(sectionIndex, fieldIndex) {
        if (!formConfig.sections[sectionIndex].fields[fieldIndex].options) {
            formConfig.sections[sectionIndex].fields[fieldIndex].options = [];
        }
        formConfig.sections[sectionIndex].fields[fieldIndex].options.push({
            value: '',
            label: {
                zh: '',
                en: ''
            }
        });
        
        // 先保存到資料庫，然後重新載入頁面
        try {
            await saveConfig();
            location.reload();
        } catch (error) {
            console.error('保存失敗:', error);
            alert('保存失敗，請重試');
        }
    }

    // 移除選項
    async function removeOption(sectionIndex, fieldIndex, optionIndex) {
        formConfig.sections[sectionIndex].fields[fieldIndex].options.splice(optionIndex, 1);
        
        // 先保存到資料庫，然後重新載入頁面
        try {
            await saveConfig();
            location.reload();
        } catch (error) {
            console.error('保存失敗:', error);
            alert('保存失敗，請重試');
        }
    }

    // 切換字段顯示
    function toggleField(sectionIndex, fieldIndex) {
        const field = formConfig.sections[sectionIndex].fields[fieldIndex];
        field.visible = !field.visible;
        
        const fieldElement = document.querySelector('[data-section-index="' + sectionIndex + '"] [data-field-index="' + fieldIndex + '"]');
        if (field.visible) {
            fieldElement.classList.remove('hidden-field');
        } else {
            fieldElement.classList.add('hidden-field');
        }
        updatePreview();
    }

    // 切換區塊顯示
    function toggleSection(sectionIndex) {
        const section = formConfig.sections[sectionIndex];
        section.visible = !section.visible;
        
        const sectionElement = document.querySelector('[data-section-index="' + sectionIndex + '"]');
        if (section.visible) {
            sectionElement.classList.remove('hidden-section');
        } else {
            sectionElement.classList.add('hidden-section');
        }
        updatePreview();
    }

    // 添加字段
    async function addField(sectionIndex) {
        const newField = {
            fieldName: 'new_field',
            label: '新字段',
            type: 'text',
            required: false,
            visible: true,
            placeholder: '',
            order: formConfig.sections[sectionIndex].fields.length + 1
        };
        formConfig.sections[sectionIndex].fields.push(newField);
        
        // 先保存到資料庫，然後重新載入頁面
        try {
            await saveConfig();
            location.reload();
        } catch (error) {
            console.error('保存失敗:', error);
            alert('保存失敗，請重試');
        }
    }

    // 移除字段
    async function removeField(sectionIndex, fieldIndex) {
        if (confirm('確定要刪除此字段嗎？')) {
            formConfig.sections[sectionIndex].fields.splice(fieldIndex, 1);
            
            // 先保存到資料庫，然後重新載入頁面
            try {
                await saveConfig();
                location.reload();
            } catch (error) {
                console.error('保存失敗:', error);
                alert('保存失敗，請重試');
            }
        }
    }

    // 添加區塊
    async function addSection() {
        const newSection = {
            sectionName: 'new_section',
            sectionTitle: '新區塊',
            visible: true,
            order: formConfig.sections.length + 1,
            fields: []
        };
        formConfig.sections.push(newSection);
        
        // 先保存到資料庫，然後重新載入頁面
        try {
            await saveConfig();
            location.reload();
        } catch (error) {
            console.error('保存失敗:', error);
            alert('保存失敗，請重試');
        }
    }

    // 移除區塊
    async function removeSection(sectionIndex) {
        if (confirm('確定要刪除此區塊嗎？')) {
            formConfig.sections.splice(sectionIndex, 1);
            
            // 先保存到資料庫，然後重新載入頁面
            try {
                await saveConfig();
                location.reload();
            } catch (error) {
                console.error('保存失敗:', error);
                alert('保存失敗，請重試');
            }
        }
    }

    // 預覽語言設置
    let previewLanguage = 'zh';
    
    // 切換預覽語言
    function switchPreviewLanguage(lang) {
        previewLanguage = lang;
        updatePreview();
        updatePreviewLanguageButtons();
    }
    
    // 更新預覽語言按鈕狀態
    function updatePreviewLanguageButtons() {
        document.getElementById('previewZhBtn').classList.toggle('active', previewLanguage === 'zh');
        document.getElementById('previewEnBtn').classList.toggle('active', previewLanguage === 'en');
    }
    
    // 獲取多語言文本
    function getMultilingualText(obj, lang) {
        if (typeof obj === 'string') return obj;
        if (obj && obj[lang]) return obj[lang];
        if (obj && obj.zh) return obj.zh; // 回退到中文
        return '';
    }
    
    // 更新預覽
    function updatePreview() {
        const preview = document.getElementById('formPreview');
        let html = '';
        
        formConfig.sections.forEach(function(section) {
            if (section.visible) {
                html += '<div class="form-section-preview mb-3">';
                html += '<h5>' + getMultilingualText(section.sectionTitle, previewLanguage) + '</h5>';
                
                section.fields.forEach(function(field) {
                    if (field.visible) {
                        html += '<div class="mb-2">';
                        html += '<label class="form-label">' + getMultilingualText(field.label, previewLanguage);
                        if (field.required) html += ' <span class="text-danger">*</span>';
                        html += '</label>';
                        
                        if (field.type === 'select' && field.options) {
                            html += '<select class="form-select" disabled>';
                            html += '<option>--- ' + (previewLanguage === 'zh' ? '請選擇' : 'Please select') + ' ---</option>';
                            field.options.forEach(function(option) {
                                html += '<option value="' + option.value + '">' + getMultilingualText(option.label, previewLanguage) + '</option>';
                            });
                            html += '</select>';
                        } else if (field.type === 'textarea') {
                            html += '<textarea class="form-control" placeholder="' + getMultilingualText(field.placeholder, previewLanguage) + '" disabled></textarea>';
                        } else {
                            html += '<input type="' + field.type + '" class="form-control" placeholder="' + getMultilingualText(field.placeholder, previewLanguage) + '" disabled>';
                        }
                        html += '</div>';
                    }
                });
                
                html += '</div>';
            }
        });
        
        preview.innerHTML = html;
    }

    // 儲存配置
    async function saveConfig() {
        try {
            const response = await fetch('/formConfig/' + eventId + '/config', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    sections: formConfig.sections,
                    defaultLanguage: formConfig.defaultLanguage
                })
            });
            
            const result = await response.json();
            if (result.success) {
                console.log('表單配置已儲存！');
            } else {
                console.error('儲存失敗：' + result.message);
                throw new Error(result.message);
            }
        } catch (error) {
            console.error('儲存失敗：' + error.message);
            throw error;
        }
    }

    // 重置為預設
    async function resetToDefault() {
        if (confirm('確定要重置為預設配置嗎？這將覆蓋所有現有設定。')) {
            try {
                const response = await fetch('/formConfig/' + eventId + '/reset', {
                    method: 'POST'
                });
                
                const result = await response.json();
                if (result.success) {
                    alert('已重置為預設配置！');
                    location.reload();
                } else {
                    alert('重置失敗：' + result.message);
                }
            } catch (error) {
                alert('重置失敗：' + error.message);
            }
        }
    }

    // 初始化預覽
    updatePreview();
</script>

<%- include ("components/footer") %>